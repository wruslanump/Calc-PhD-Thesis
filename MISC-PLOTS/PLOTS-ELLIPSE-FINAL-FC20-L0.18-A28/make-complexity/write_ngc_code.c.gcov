        -:    0:Source:/home/wruslan/workspaces-gnat/gnatstudio-c/gnat_c_cnc-04/src/algo/write_ngc_code.c
        -:    1:// FILE: write_ngc_code.c
        -:    2:
        -:    3:#include <stdio.h> // For FILE*
        -:    4:
        -:    5:// INCLUDED FOR THE FUNCTION DEFINITIONS
        -:    6:#include "curves/c_accelern.h"
        -:    7:#include "curves/c_position.h"
        -:    8:#include "curves/c_velocity.h"
        -:    9:
        -:   10:#include "algo/write_ngc_code.h"
        -:   11:
        -:   12:// ==================================================================
        -:   13:/*
        -:   14:F Followed by a numerical value to define the feed rate. The magnitude and value
        -:   15:of which will be determined by the feed mode setting
        -:   16:
        -:   17:*/
        -:   18:
        -:   19:// ==================================================================
        2:   20:void proc_writeheader_data_ngc_code (FILE* FHdata_ngc_code, char* CurveTypeDesc, double ngc_depth, double ngc_scale)
        -:   21:// ==================================================================
        -:   22:{
        -:   23:
        2:   24:fprintf (FHdata_ngc_code, "( DTStamp FHdata_ngc_code %s )\n",
        -:   25:           get_datetime_stamp ());
        -:   26:
        2:   27:fprintf (FHdata_ngc_code, "( Bismillah 3 times WRY )\n");
        2:   28:fprintf (FHdata_ngc_code, "( ==== %s , PARAMETRIC CURVE ==== )\n", CurveTypeDesc);
        -:   29:
        2:   30:fprintf (FHdata_ngc_code, "#<depth>=%f \n", ngc_depth);
        2:   31:fprintf (FHdata_ngc_code, "#<scale>=%f \n", ngc_scale);
        2:   32:fprintf (FHdata_ngc_code, "G21 G90 G64 G40 \n");
        2:   33:fprintf (FHdata_ngc_code, "G00 Z3.0 \n");
        2:   34:fprintf (FHdata_ngc_code, "( engraving ) \n");
        2:   35:fprintf (FHdata_ngc_code, "G17 \n");
        2:   36:fprintf (FHdata_ngc_code, "M3 S10000 \n");
        -:   37:
        -:   38:// MOVE FAST HOME TO START POINT OF CURVE (FAST JOG)
        -:   39:// NEED TO GET POINT (x(0), y(0)) AT INITIAL u = 0
        2:   40:double this_u = 0.000000000;
        2:   41:double init_x = fxn_cpos_x (this_u);
        2:   42:double init_y = fxn_cpos_y (this_u);
        -:   43:
        -:   44:// ACTUAL RUN G-CODE
        2:   45:fprintf (FHdata_ngc_code, "G00 F300 X[%12.6f ] Y[%12.6f] (# u= %.9lf Go linear fast F500 to initial point#) \n", init_x, init_y, this_u);
        2:   46:fprintf (FHdata_ngc_code, "G01 F100.0 Z[-2.0] \n");
        2:   47:fprintf (FHdata_ngc_code, "( BEGIN ====================== ) \n");
        -:   48:
        -:   49:
        -:   50:
        2:   51:}
        -:   52:
        -:   53:// ==================================================================
        -:   54:void
        2:   55:proc_writefooter_data_ngc_code (FILE *FHdata_ngc_code)
        -:   56:// ==================================================================
        -:   57:{
        -:   58:
        2:   59:fprintf (FHdata_ngc_code, "G01 F100.0 Z[3.0] \n");
        2:   60:fprintf (FHdata_ngc_code, "M5 \n");
        2:   61:fprintf (FHdata_ngc_code, "M2 \n");
        2:   62:fprintf (FHdata_ngc_code, "( END ====================== ) \n");
        2:   63:fprintf (FHdata_ngc_code, "( Alhamdulillah 3 times WRY.)\n");
        2:   64:fprintf (FHdata_ngc_code, "( DTStamp FHdata_ngc_code %s )\n", get_datetime_stamp ());
        -:   65:
        2:   66:}
        -:   67:
        -:   68:// ==================================================================
    22594:   69:void proc_write_data_ngc_code (FILE *FHdata_ngc_code, double rtime, double u,
        -:   70:                          double u_next, double t_interpol,
        -:   71:                          double curr_tang_accn, double curr_frate,
        -:   72:                          double curr_frate_limit, double ngc_depth, double ngc_scale, double frate_cmd)
        -:   73:// ==================================================================
        -:   74:{
    22594:   75:  int N = (int) (1000)*rtime;
        -:   76:
    22594:   77:  double cpos_x = fxn_cpos_x (u);
    22594:   78:  double cpos_y = fxn_cpos_y (u);
    22594:   79:  double cpos_r = fxn_cpos_r (u);
        -:   80:
    22594:   81:  double eps = fxn_cpos_epsilon (u, u_next);
    22594:   82:  double rho = fxn_cpos_rho (u);
        -:   83:
        -:   84:  // AVOID JITTER AT MAXIMUM FEEDRATE COMMAND
    22594:   85:  if (curr_frate > frate_cmd)
        -:   86:    {
     8842:   87:      curr_frate = frate_cmd;
        -:   88:    }
        -:   89:
        -:   90:  // AVOID JITTER AT FEEDRATE LIMIT
    22594:   91:  if (curr_frate > curr_frate_limit)
        -:   92:    {
     6128:   93:      curr_frate = curr_frate_limit;
        -:   94:    }
        -:   95:
        -:   96:  // TO SOLVE STARTING FEEDRATE AND ENDING FEEDRATE BEING TOO SLOW
        -:   97:  // NEED TO TEST IN LINUXCNC SIMULATION (SETTING A MINIMUM FEEDRATE)
    22594:   98:  if (curr_frate < 3.0)
        -:   99:    {
      766:  100:      curr_frate = 3.0;
        -:  101:    }
        -:  102:
        -:  103:  // USE CURR_FRATE (GOOD) FOR X AND Y FEEDRATE COMPONENTS (UNIT VECTORS)
    22594:  104:  double x_frate = curr_frate * (fxn_cvel_x (u) / fxn_cvel_r (u));
    22594:  105:  double y_frate = curr_frate * (fxn_cvel_y (u) / fxn_cvel_r (u));
        -:  106:
        -:  107:  // CHECK
    22594:  108:  double calc_frate = sqrt (x_frate*x_frate + y_frate*y_frate);
    22594:  109:  double frdiff = (curr_frate_limit - curr_frate);
        -:  110:
        -:  111:  // ACTUAL RUN G-CODE
    22594:  112:  fprintf (FHdata_ngc_code, "G01 F%12.6f X[%12.6f] Y[%12.6f] (#u= %.9lf eps= %.12lf Xfrate= %9.6f Yfrate= %9.6f frlimit= %9.6f frdiff= %12.9f frcmd= %6.3f #) \n", curr_frate, (cpos_x*ngc_scale), (cpos_y*ngc_scale), u, eps, x_frate, y_frate, fabs(curr_frate_limit), frdiff, frate_cmd);
        -:  113:
    22594:  114:}
        -:  115:
        -:  116:// ==================================================================
        -:  117:// ALHAMDULILLAH 3 TIMES WRY
        -:  118:// ==================================================================
